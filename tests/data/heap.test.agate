import "data/heap" for Heap
import "test" for TestSuite

TestSuite.new("Heap") {|suite|
  suite.case("NewEmpty") {|case|
    def h = Heap.new()
    case.expect_true(h.empty)
    case.expect_equals(h.size, 0)
  }

  suite.case("PushOneElement") {|case|
    def h = Heap.new()
    h.push(42)
    case.expect_false(h.empty)
    case.expect_equals(h.size, 1)
    case.expect_equals(h.top, 42)
  }

  suite.case("PushManyElement") {|case|
    def h = Heap.new()
    h.push(12)
    h.push(69)
    h.push(42)
    case.expect_false(h.empty)
    case.expect_equals(h.size, 3)
    case.expect_equals(h.top, 69)
    h.pop()
    case.expect_equals(h.size, 2)
    case.expect_equals(h.top, 42)
    h.pop()
    case.expect_equals(h.size, 1)
    case.expect_equals(h.top, 12)
    h.pop()
    case.expect_true(h.empty)
  }

  suite.case("Random") {|case|
    def random = Random.new(42)
    def array = []
    for (i in 1..1000) {
      array.append(random.int(200))
    }

    def h = Heap.new()
    for (x in array) {
      h.push(x)
    }

    array.sort()
    array.reverse()

    for (x in array) {
      case.expect_false(h.empty)
      case.expect_equals(x, h.top)
      h.pop()
    }

    case.expect_true(h.empty)
  }

  suite.case("Sort") {|case|
    def arr = [ 7, 9, 2, 3, 8, 1, 5, 0, 4, 6 ]
    def sorted = Heap.sort(arr)
    case.expect_true(sorted.sorted())
  }

  suite.case("SortRandom") {|case|
    def random = Random.new(42)
    def array = []
    for (i in 1..30) {
      array.append(random.int(200))
    }

    def sorted = Heap.sort(array)
    case.expect_true(sorted.sorted())
  }

}

